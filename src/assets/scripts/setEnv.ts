/* tslint:disable */
// @ts-nocheck
const { writeFile, existsSync, mkdirSync } = require('fs');
const { argv } = require('yargs');
const dotenv = require('dotenv');
const path = require('path');
const environment = argv.environment;
let targetPath = '';

// Checks whether command line argument of `prod` was provided signifying production mode
const isProduction = environment === 'prod';
isProduction ? dotenv.config() : dotenv.config({ path: path.resolve(__dirname, '../../../dev.env') });

function writeFileUsingFS(targetPath, environmentFileContent) {
  writeFile(targetPath, environmentFileContent, function (err) {
    if (err) {
      console.log(err);
    }
    if (environmentFileContent !== '') {
      console.log(`wrote variables to ${targetPath}`);
    }
  });
}

// Providing path to the `environments` directory
const envDirectory = './src/environments';

// creates the `environments` directory if it does not exist
if (!existsSync(envDirectory)) { mkdirSync(envDirectory); }

// Choose the correct targetPath based on the environment chosen
if (isProduction) {
  // Creates the `environment.prod.ts` file if it does not exist
  writeFileUsingFS('./src/environments/environment.prod.ts', '');
  targetPath = `${envDirectory}/environment.prod.ts`;
}
else {
  // Creates the `environment.ts` file if it does not exist
  writeFileUsingFS('./src/environments/environment.ts', '');
  targetPath = `${envDirectory}/environment.ts`;
}

//actual content to be compiled dynamically and pasted into respective environment files
const environmentFileContent = `// This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  export const environment = {
    production: ${isProduction},
    firebase: {
      apiKey: '${process.env.FIREBASE_API_KEY}',
      authDomain: '${process.env.AUTH_DOMAIN}',
      projectId: '${process.env.PROJECT_ID}',
      storageBucket: '${process.env.STORAGE_BUCKET}',
      messagingSenderId: '${process.env.MESSAGING_SENDER_ID}',
      appId: '${process.env.APP_ID}',
      measurementId: '${process.env.MEASUREMENT_ID}',
      databaseURL: '<your-database-URL>'
    }
  };`;

writeFileUsingFS(targetPath, environmentFileContent); // appending data into the target file

/* tslint:enable */
